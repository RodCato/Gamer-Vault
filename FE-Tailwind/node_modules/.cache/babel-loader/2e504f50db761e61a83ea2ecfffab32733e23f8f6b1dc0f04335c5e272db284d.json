{"ast":null,"code":"var _jsxFileName = \"/Users/learnacademy/Desktop/Capstone/frontend/src/components/WhacADev.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport gamingJess from \"../assets/gaming-jess.png\";\nimport gamingVance from \"../assets/gaming-vance.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WhacADev = () => {\n  _s();\n  const [currMoleTile, setCurrMoleTile] = useState(null);\n  const [currPlantTile, setCurrPlantTile] = useState(null);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  useEffect(() => {\n    setGame();\n  }, []);\n  function setGame() {\n    // set up the grid in html\n    for (let i = 0; i < 9; i++) {\n      let tile = document.createElement(\"div\");\n      tile.id = i.toString();\n      tile.addEventListener(\"click\", selectTile);\n      document.getElementById(\"board\").appendChild(tile);\n    }\n    setInterval(setMole, 1000);\n    setInterval(setPlant, 2000);\n  }\n  function getRandomTile() {\n    let num = Math.floor(Math.random() * 9);\n    return num.toString();\n  }\n  function setMole() {\n    if (gameOver) {\n      return;\n    }\n    if (currMoleTile) {\n      currMoleTile.innerHTML = \"\";\n    }\n    let mole = document.createElement(\"img\");\n    mole.src = gamingJess;\n    mole.className = \"img\";\n    let num = getRandomTile();\n    if (currPlantTile && currPlantTile.id === num) {\n      return;\n    }\n    let tile = document.getElementById(num);\n    setCurrMoleTile(() => tile);\n    tile.appendChild(mole);\n  }\n  function setPlant() {\n    if (gameOver) {\n      return;\n    }\n    if (currPlantTile) {\n      currPlantTile.innerHTML = \"\";\n    }\n    let plant = document.createElement(\"img\");\n    plant.src = gamingVance;\n    plant.className = \"img\";\n    let num = getRandomTile();\n    if (currMoleTile && currMoleTile.id === num) {\n      return;\n    }\n    let tile = document.getElementById(num);\n    setCurrPlantTile(tile);\n    tile.appendChild(plant);\n  }\n  function selectTile() {\n    if (gameOver) {\n      return;\n    }\n    if (this === currMoleTile) {\n      setScore(prevScore => prevScore + 10);\n    } else if (this === currPlantTile) {\n      setScore(\"GAME OVER: \" + score.toString());\n      gameOver = true;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      id: \"board\",\n      children: [...Array(9)].map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tile\",\n        id: index.toString()\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"score\",\n      children: gameOver ? `GAME OVER: ${score}` : score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(WhacADev, \"MmlJcoYJJYq2yyo06yTWLaXrRT0=\");\n_c = WhacADev;\nexport default WhacADev;\nvar _c;\n$RefreshReg$(_c, \"WhacADev\");","map":{"version":3,"names":["React","useEffect","useState","gamingJess","gamingVance","jsxDEV","_jsxDEV","WhacADev","_s","currMoleTile","setCurrMoleTile","currPlantTile","setCurrPlantTile","score","setScore","gameOver","setGameOver","setGame","i","tile","document","createElement","id","toString","addEventListener","selectTile","getElementById","appendChild","setInterval","setMole","setPlant","getRandomTile","num","Math","floor","random","innerHTML","mole","src","className","plant","prevScore","children","Array","map","_","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/learnacademy/Desktop/Capstone/frontend/src/components/WhacADev.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport gamingJess from \"../assets/gaming-jess.png\";\nimport gamingVance from \"../assets/gaming-vance.png\";\n\nconst WhacADev = () => {\n  const [currMoleTile, setCurrMoleTile] = useState(null);\n  const [currPlantTile, setCurrPlantTile] = useState(null);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n\n  useEffect(() => {\n    setGame();\n  }, []);\n\n  function setGame() {\n    // set up the grid in html\n    for (let i = 0; i < 9; i++) {\n      let tile = document.createElement(\"div\");\n      tile.id = i.toString();\n      tile.addEventListener(\"click\", selectTile);\n      document.getElementById(\"board\").appendChild(tile);\n    }\n    setInterval(setMole, 1000);\n    setInterval(setPlant, 2000);\n  }\n\n  function getRandomTile() {\n    let num = Math.floor(Math.random() * 9);\n    return num.toString();\n  }\n\n  function setMole() {\n    if (gameOver) {\n      return;\n    }\n    if (currMoleTile) {\n      currMoleTile.innerHTML = \"\";\n    }\n    let mole = document.createElement(\"img\");\n    mole.src = gamingJess;\n    mole.className = \"img\";\n\n    let num = getRandomTile();\n    if (currPlantTile && currPlantTile.id === num) {\n      return;\n    }\n    let tile = document.getElementById(num);\n    setCurrMoleTile(() => tile);\n    tile.appendChild(mole);\n  }\n\n  function setPlant() {\n    if (gameOver) {\n      return;\n    }\n    if (currPlantTile) {\n      currPlantTile.innerHTML = \"\";\n    }\n    let plant = document.createElement(\"img\");\n    plant.src = gamingVance;\n    plant.className = \"img\";\n\n    let num = getRandomTile();\n    if (currMoleTile && currMoleTile.id === num) {\n      return;\n    }\n    let tile = document.getElementById(num);\n    setCurrPlantTile(tile);\n    tile.appendChild(plant);\n  }\n\n  function selectTile() {\n    if (gameOver) {\n      return;\n    }\n    if (this === currMoleTile) {\n      setScore(prevScore => prevScore + 10);\n  } else if (this === currPlantTile) {\n    setScore(\"GAME OVER: \" + score.toString());\n    gameOver = true;\n    }\n  }\n\n  return (\n    <div>\n      {/* Render the game board and score */}\n      <div className=\"board\" id=\"board\">\n        {/* Render the grid tiles */}\n        {[...Array(9)].map((_, index) => (\n          <div className=\"tile\" key={index} id={index.toString()}></div>\n        ))}\n      </div>\n      <div id=\"score\">{gameOver ? `GAME OVER: ${score}` : score}</div>\n    </div>\n  );\n};\n\nexport default WhacADev;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}