{"ast":null,"code":"var _jsxFileName = \"/Users/learnacademy/Desktop/Capstone/frontend/src/components/SearchComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Card, CardBody, CardTitle, Button, Label, Input } from \"reactstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SearchComponent = () => {\n  _s();\n  const navigate = useNavigate();\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const fetchSearchResults = async () => {\n    try {\n      const apiKey = \"5d37a51f335c471490ba1b0276d510f8\"; // Replace with your actual API key\n      const response = await fetch(`https://api.rawg.io/api/games?key=${apiKey}&search=${searchQuery}`);\n      const data = await response.json();\n      const gamesArray = data.results;\n      const filteredGamesArray = gamesArray.filter(game => {\n        return !gameAlreadyPresent(game);\n      });\n      setSearchResults(filteredGamesArray);\n    } catch (error) {\n      console.error(\"Error fetching search results:\", error);\n    }\n  };\n\n  // const gameAlreadyPresent = (game) => {\n  //   // Replace this with your own logic to check if the game is already present on your site\n  //   // You can check against a database, an internal list, or any other mechanism you have\n  //   // For demonstration purposes, let's assume that if the game name contains the word \"example\", it is already present\n  //   return game.name.toLowerCase().includes(\"example\");\n  // };\n\n  const handleSearchChange = event => {\n    setSearchQuery(event.target.value);\n  };\n  const handleSearch = event => {\n    event.preventDefault();\n    fetchSearchResults();\n  };\n  const handleSaveGame = game => {\n    var _game$genres$, _game$platforms$;\n    navigate(\"/gamenew\", {\n      state: {\n        prefill: {\n          title: game.name,\n          image: game.background_image,\n          genre: (_game$genres$ = game.genres[0]) === null || _game$genres$ === void 0 ? void 0 : _game$genres$.name,\n          platform: (_game$platforms$ = game.platforms[0]) === null || _game$platforms$ === void 0 ? void 0 : _game$platforms$.platform.name\n        }\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          value: searchQuery,\n          onChange: handleSearchChange,\n          placeholder: \"Enter a game...\",\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-results\",\n      children: searchResults.map(game => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-result\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"eachCard\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-image\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: game.background_image,\n              alt: game.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n              style: {\n                fontWeight: \"600\"\n              },\n              children: game.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button-container\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"pixel-btn\",\n                onClick: () => handleSaveGame(game),\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, game.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(SearchComponent, \"hF/+xdl83PGi6qkirltXNkRR/iw=\", false, function () {\n  return [useNavigate];\n});\n_c = SearchComponent;\nexport default SearchComponent;\nvar _c;\n$RefreshReg$(_c, \"SearchComponent\");","map":{"version":3,"names":["React","useState","Card","CardBody","CardTitle","Button","Label","Input","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","SearchComponent","_s","navigate","searchQuery","setSearchQuery","searchResults","setSearchResults","fetchSearchResults","apiKey","response","fetch","data","json","gamesArray","results","filteredGamesArray","filter","game","gameAlreadyPresent","error","console","handleSearchChange","event","target","value","handleSearch","preventDefault","handleSaveGame","_game$genres$","_game$platforms$","state","prefill","title","name","image","background_image","genre","genres","platform","platforms","children","className","onSubmit","for","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","map","src","alt","style","fontWeight","onClick","id","_c","$RefreshReg$"],"sources":["/Users/learnacademy/Desktop/Capstone/frontend/src/components/SearchComponent.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Card, CardBody, CardTitle, Button, Label, Input } from \"reactstrap\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst SearchComponent = () => {\n  const navigate = useNavigate();\n\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  const fetchSearchResults = async () => {\n    try {\n      const apiKey = \"5d37a51f335c471490ba1b0276d510f8\"; // Replace with your actual API key\n      const response = await fetch(\n        `https://api.rawg.io/api/games?key=${apiKey}&search=${searchQuery}`\n      );\n      const data = await response.json();\n      const gamesArray = data.results;\n\n      const filteredGamesArray = gamesArray.filter((game) => {\n        return !gameAlreadyPresent(game);\n      });\n\n      setSearchResults(filteredGamesArray);\n    } catch (error) {\n      console.error(\"Error fetching search results:\", error);\n    }\n  };\n\n  // const gameAlreadyPresent = (game) => {\n  //   // Replace this with your own logic to check if the game is already present on your site\n  //   // You can check against a database, an internal list, or any other mechanism you have\n  //   // For demonstration purposes, let's assume that if the game name contains the word \"example\", it is already present\n  //   return game.name.toLowerCase().includes(\"example\");\n  // };\n\n  const handleSearchChange = (event) => {\n    setSearchQuery(event.target.value);\n  };\n\n  const handleSearch = (event) => {\n    event.preventDefault();\n    fetchSearchResults();\n  };\n\n  const handleSaveGame = (game) => {\n    navigate(\"/gamenew\", {\n      state: {\n        prefill: {\n          title: game.name,\n          image: game.background_image,\n          genre: game.genres[0]?.name,\n          platform: game.platforms[0]?.platform.name,\n        },\n      },\n    });\n  };\n\n  return (\n    <>\n      <form className=\"form\" onSubmit={handleSearch}>\n        <div className=\"input\">\n          <Label for=\"name\"></Label>\n          <Input\n            type=\"text\"\n            value={searchQuery}\n            onChange={handleSearchChange}\n            placeholder=\"Enter a game...\"\n            className=\"search-input\"\n          />\n        </div>\n        <Button type=\"submit\">Search</Button>\n      </form>\n      <div className=\"search-results\">\n        {searchResults.map((game) => (\n          <div key={game.id} className=\"search-result\">\n            <Card className=\"eachCard\">\n              <div className=\"game-image\">\n                <img src={game.background_image} alt={game.name} />\n              </div>\n              <CardBody className=\"card-body\">\n                <CardTitle style={{ fontWeight: \"600\" }}>{game.name}</CardTitle>\n                <div className=\"button-container\">\n                  <Button\n                    className=\"pixel-btn\"\n                    onClick={() => handleSaveGame(game)}\n                  >\n                    Save\n                  </Button>\n                </div>\n              </CardBody>\n            </Card>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default SearchComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}