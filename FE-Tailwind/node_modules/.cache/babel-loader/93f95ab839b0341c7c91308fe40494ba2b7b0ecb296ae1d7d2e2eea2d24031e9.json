{"ast":null,"code":"var _jsxFileName = \"/Users/learnacademy/Desktop/Capstone/frontend/src/components/WhacADev.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport gamingJess from \"../assets/gaming-jess.png\";\nimport gamingVance from \"../assets/gaming-vance.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WhacADev = () => {\n  _s();\n  const [currMoleTile, setCurrMoleTile] = useState(null);\n  const [currPlantTile, setCurrPlantTile] = useState(null);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  useEffect(() => {\n    setGame();\n  }, []);\n  function setGame() {\n    // set up the grid in html\n    const grid = [];\n    for (let i = 0; i < 9; i++) {\n      grid.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tile\",\n        id: i.toString(),\n        onClick: selectTile\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this));\n    }\n    return grid;\n  }\n  function getRandomTile() {\n    let num = Math.floor(Math.random() * 9);\n    return num.toString();\n  }\n  function setMole() {\n    if (gameOver) {\n      return;\n    }\n    if (currMoleTile) {\n      currMoleTile.removeChild(currMoleTile.firstChild);\n    }\n    let mole = document.createElement(\"img\");\n    mole.src = gamingJess;\n    mole.className = \"img\";\n    let num = getRandomTile();\n    if (currPlantTile && currPlantTile.id === num) {\n      return;\n    }\n    let tile = document.getElementById(num);\n    setCurrMoleTile(tile);\n    tile.appendChild(mole);\n  }\n  function setPlant() {\n    if (gameOver) {\n      return;\n    }\n    if (currPlantTile) {\n      currPlantTile.removeChild(currPlantTile.firstChild);\n    }\n    let plant = document.createElement(\"img\");\n    plant.src = gamingVance;\n    plant.className = \"img\";\n    let num = getRandomTile();\n    if (currMoleTile && currMoleTile.id === num) {\n      return;\n    }\n    let tile = document.getElementById(num);\n    setCurrPlantTile(tile);\n    tile.appendChild(plant);\n  }\n  function selectTile() {\n    if (gameOver) {\n      return;\n    }\n    if (this === currMoleTile) {\n      setScore(prevScore => prevScore + 10);\n    } else if (this === currPlantTile) {\n      setScore(\"GAME OVER: \" + score.toString());\n      setGameOver(true);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      id: \"board\",\n      children: setGame()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"score\",\n      children: gameOver ? `GAME OVER: ${score}` : score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(WhacADev, \"MmlJcoYJJYq2yyo06yTWLaXrRT0=\");\n_c = WhacADev;\nexport default WhacADev;\nvar _c;\n$RefreshReg$(_c, \"WhacADev\");","map":{"version":3,"names":["React","useEffect","useState","gamingJess","gamingVance","jsxDEV","_jsxDEV","WhacADev","_s","currMoleTile","setCurrMoleTile","currPlantTile","setCurrPlantTile","score","setScore","gameOver","setGameOver","setGame","grid","i","push","className","id","toString","onClick","selectTile","fileName","_jsxFileName","lineNumber","columnNumber","getRandomTile","num","Math","floor","random","setMole","removeChild","firstChild","mole","document","createElement","src","tile","getElementById","appendChild","setPlant","plant","prevScore","children","_c","$RefreshReg$"],"sources":["/Users/learnacademy/Desktop/Capstone/frontend/src/components/WhacADev.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport gamingJess from \"../assets/gaming-jess.png\";\nimport gamingVance from \"../assets/gaming-vance.png\";\n\nconst WhacADev = () => {\n  const [currMoleTile, setCurrMoleTile] = useState(null);\n  const [currPlantTile, setCurrPlantTile] = useState(null);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n\n  useEffect(() => {\n    setGame();\n  }, []);\n\n  function setGame() {\n    // set up the grid in html\n    const grid = [];\n    for (let i = 0; i < 9; i++) {\n      grid.push(\n        <div\n          className=\"tile\"\n          key={i}\n          id={i.toString()}\n          onClick={selectTile}\n        ></div>\n      );\n    }\n    return grid;\n  }\n\n  function getRandomTile() {\n    let num = Math.floor(Math.random() * 9);\n    return num.toString();\n  }\n\n  function setMole() {\n    if (gameOver) {\n      return;\n    }\n    if (currMoleTile) {\n      currMoleTile.removeChild(currMoleTile.firstChild);\n    }\n    let mole = document.createElement(\"img\");\n    mole.src = gamingJess;\n    mole.className = \"img\";\n\n    let num = getRandomTile();\n    if (currPlantTile && currPlantTile.id === num) {\n      return;\n    }\n    let tile = document.getElementById(num);\n    setCurrMoleTile(tile);\n    tile.appendChild(mole);\n  }\n\n  function setPlant() {\n    if (gameOver) {\n      return;\n    }\n    if (currPlantTile) {\n      currPlantTile.removeChild(currPlantTile.firstChild);\n    }\n    let plant = document.createElement(\"img\");\n    plant.src = gamingVance;\n    plant.className = \"img\";\n\n    let num = getRandomTile();\n    if (currMoleTile && currMoleTile.id === num) {\n      return;\n    }\n    let tile = document.getElementById(num);\n    setCurrPlantTile(tile);\n    tile.appendChild(plant);\n  }\n\n  function selectTile() {\n    if (gameOver) {\n      return;\n    }\n    if (this === currMoleTile) {\n      setScore((prevScore) => prevScore + 10);\n    } else if (this === currPlantTile) {\n      setScore(\"GAME OVER: \" + score.toString());\n      setGameOver(true);\n    }\n  }\n\n  return (\n    <div>\n      {/* Render the game board and score */}\n      <div className=\"board\" id=\"board\">\n        {/* Render the grid tiles */}\n        {setGame()}\n      </div>\n      <div id=\"score\">\n        {gameOver ? `GAME OVER: ${score}` : score}\n      </div>\n    </div>\n  );\n};\n\nexport default WhacADev;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}